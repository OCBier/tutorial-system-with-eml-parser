/*Prototype styles */
 
 /*Sets the base font-size for body in px. Also remove margin*/
body
{
	font-size: 12px;
	margin: 0em;
	overflow: auto;
	
}

/*Elements will not be displayed but will still take up normal space in document flow */
.hidden
{
	visibility: hidden;
}

/*All anchors have magenta text */
a
{
	color: magenta;
}

/*Bakground of a element becomes darkslategrey on hover */
a:hover
{
	background: lightslategrey;
	
}


/*Margins for section elements within the main wrapper */
section
{
	margin: 5em 1em 1em 4em;
}




#template h2
{
	font-variant: small-caps;
	font-family: "Tahoma", sans-serif;
	font-size: 2.3em;
	margin: 1em;
}


/*General style for all main headings in template*/
#template h1
{

	font-size: 2.5em;
	font-weight: bold;
	margin: 1em 0.5em 0.5em 1em;
	padding: 1em 0.5em 1em 0.5em;
	font-variant: small-caps;
}


#template ul
{
	margin: 1em;
}
 


/*Set font properties as well as padding, margin,
  and specify how buttons should be handled within flex container. 
  Also set background color and border properties for button so that
  it has no border.*/
button
{
	font: bold 1.2em "Helvetica", serif;
	font-variant: small-caps;
	text-align: center;
	color: cornsilk;
	padding: 0.4em;
	margin: 0.2em;
	
	height: 2.5em;
	
	background-color: orange;
	border-width: 0em;

}

/*Show shadow around button when user hovers */
button:hover
{
	-webkit-box-shadow: 1px 1px 10px 1px grey;
    box-shadow:	1px 1px 10px 1px grey;
}
	
/* Styling for any flex container. Sets elements to row format, allowing wrapping.
  Elements are justified with first and last at edge of container, and rest
  of elements evenly spaced between */
.flex
{
	display: -webkit-box;      /* Compatibility for iOS 6, Safari 3.1-6 */
	display: -moz-box;         /* Compatibility for < Firefox 19 */
	display: -ms-flexbox;      /* IE 10 Compatibility */
	display: -webkit-flex;     /* Chrom compatibility */
	
	display: flex;
	-webkit-flex-flow: row wrap;           /*Display flexbox elements in row but allow wrap if necessary */
	flex-flow: row wrap;
	
    justify-content: space-between;
}

/*Display container items vertically in the flex container. All content is pushed to top, since
  justify-content is set to flex-start. No wrapping occurs, since flex-flow is set to column nowrap. */
.vertical-flex
{
	display: -webkit-box;      /* Compatibility for iOS 6, Safari 3.1-6 */
	display: -moz-box;         /* Compatibility for < Firefox 19 */
	display: -ms-flexbox;      /* IE 10 Compatibility */
	display: -webkit-flex;     /* Chrome compatibility */
	
	display: flex;                     /*Display as flex container which is inline with other content. Similar to inline-block level element. */
	-webkit-flex-flow: column nowrap;    /*Display flexbox elements in column and don't allow wrap */
	flex-flow: column nowrap;
	
    justify-content: flex-start;       /*IF there is extra space, elements slide to top of container with blank space at bottom. */
	
}


/*Similar to rules for .vertical-flex, except that container is displayed inline. Behaviour of container is similar to that
  of an element with display:inline-block, although it is still a flex container */
.vertical-flex-inline
{
	display: -webkit-inline-box;      /* Compatibility for iOS 6, Safari 3.1-6 */
	display: -moz-inline-box;         /* Compatibility for < Firefox 19 */
	display: -ms-inline-flexbox;      /* IE 10 Compatibility */
	display: -webkit-inline-flex;     /* Chrome compatibility */
	
	display: inline-flex;                     /*Display as flex container which is inline with other content. Similar to inline-block level element. */
	-webkit-flex-flow: column nowrap;    /*Display flexbox elements in column and don't allow wrap */
	flex-flow: column nowrap;
	
    justify-content: flex-start;       /*IF there is extra space, elements slide to top of container with blank space at bottom. */
}



/*Sets any matching element to make it invisible and remove it from page flow */
.display-false
{
	display: none;
}

/*Set element's display property to default */
.display-true
{
	display: inherit;
}


/*General styling for header and footer. Add padding to top and bottom and set 
  width to 100% of parent */
header, footer
{
	padding: 3em 0 2em 0;
	width: 100%;
}

.display-inline
{
	display: inline
}





/*************************************************************************
  Specific styling for part 2: Tutorials
  
 *************************************************************************/
/*Font-family for h1 elements is set to use Source Code Pro font in white */


#template h1
{
	color: white;
	font-family: "Source Code Pro", monospace;
	font-size: 3em;
}

#template h2
{
	font-variant: small-caps;
	font-family: "Tahoma", sans-serif;
	font-size: 2.1em;
	margin: 1em 1em 1em 0em;
}

#template h3
{
	font-variant: small-caps;
	font-size: 2em;
	font-family: "Inconsolata", monospace;     /*Use Inconsolata, which is a type of monspace font */
}

#template h4
{
	font-size: 1.6em;
}


/*Banner has vertical downward linear gradient from #2A2727 to #fffff7 which is charcoal color to near white. */
#template header#tutorial-banner
{
	background: -moz-linear-gradient(180deg, #2A2727, #ffffff);
	background: -o-linear-gradient(180deg, #2A2727, #ffffff);
	background: -webkit-linear-gradient(180deg, #2A2727, #ffffff);
	background: linear-gradient(180deg, #2A2727, #fffff0);
	padding: 0.01em;                      /*Reduced padding */
}

#template footer
{
	background: -moz-linear-gradient(0deg, darkgrey, white);
	background: -o-linear-gradient(0deg, darkgrey, white);
	background: -webkit-linear-gradient(0deg, darkgrey, white);
	background: linear-gradient(0deg, darkgrey, white);
}

/*Wrapper for menu and and content of template. These are column flex containers displayed inline with each other. So they can be wrapped in this element
  so top and bottom margins can be controlled for both elements */
#template #wrapper
{
	margin: 0em 2em 2em 0em;
	width: 100%;
}



/*Flex container for menu. Set to 10 of parent width, with 240px width at minimum. Specifies font for all children. 
  Display container items vertically in the flex container. */
#template #wrapper #menu-container
{

	width: 10%;
	min-width: 240px;
	font-size: 100%;                           /*Font size is 100% of parent's font size. */
	font-family: "Inconsolata", monospace;     /*Use Inconsolata, which is a type of monspace font */
	-webkit-box-shadow: 1em 0px 1em -0.1em lightgrey; /*Shadow is translated to right, so that it acts as a natural boundary between menu and rest of content. */
	box-shadow: 1em 0px 1em -0.1em lightgrey; 
		
}

/*h2 elements which act as labels for submenus*/
#template #wrapper #menu-container h2.submenu-title
{
	min-height: 2em;                   /*Ensure height of at least 2.5em. */
	padding: 0.5em;
	padding-bottom: 0em;
	margin-top: 1em;
	margin-bottom: -0.5em;
	border-top: 2px outset black;
	text-align: left;
	
	webkit-flex: 0 0 2em;
	flex: 0 0 2em;                       /*label item does not grow or shrink and uses computed height value */
	
	font-family: inherit;
	font-size: 2em;
	font-weight: bold;
	font-variant: small-caps;
}


/*First label should have 0 top margin */
#template #wrapper #menu-container label:first-of-type
{
	margin-top: 0em;
}



/*Nav submenus within the main menu. Note that these elements may be flex containers themselves.*/
#template #wrapper #menu-container nav
{
	margin: 0em;
	webkit-flex: 1 1 auto;
	flex: 1 1 auto;                      /*Use computed height as basis but grow and shrink equally with other submenus */
	font-size: 100%; 
	
}

/*Wrappers for menu items, Eg. anchor elements. Elements grow and shrink equally, starting with basis height of 2em.
  However, height will never be < 1.5em*/
#template #wrapper #menu-container .menu-item
{
	font-size: 100%;
	min-height: 1.5em;                                /*Height of at least 2.5em. */
	border: none;
	padding: 0.65em;
	
	text-align: left;
	webkit-flex: 1 1 2em;
	flex: 1 1 2em;
	
	padding-left: 2em;
	
	margin: 0em;
}

/*Increase top margin for first menu item */
#template #wrapper #menu-container .menu-item:first-child
{
	margin-top: 1em;
}

/*a elements which are within .menu-item wrappers which are descendants of #menu-container */
#template #wrapper #menu-container .menu-item a
{
	text-decoration: none;
	color: black;
	font-size: 1.55em;
	font-weight: normal;
	
}


/*Display limegreen border under text on hover or active for a elements in a any .menu-item container. The default
outline for active anchors is removed. */
#template #wrapper #menu-container .menu-item a:hover, #template #menu-container .menu-item a:active
{
	border-bottom: 0.12em solid limegreen;
	background: white;
	outline: none;
}

/*Custom content within template. Occupies 50% of width of parent with 15% rigt margin, 5% bottom margin and 5% left margin */
#template #wrapper #content 
{
	width: 55%;
	min-width: 320px;
	margin: 0% 10% 5% 10%;
	
}

 /* Items within #content flex container.
  Elements do not grow to fill available space beyound basis. However, they do shrink equally. 
 Flex-basis is set to auto == original height  */
#template #wrapper #content > *
{
	-webkit-flex: 0 1 auto;
	flex: 0 1 auto;           
	
}


#template p
{
	font: normal 1.55em "Noto Serif", serif;
	margin: 1.2em 0.4em 1em 0.4em;
	
}

/*Smaller margins for p elements in forms */
#template form p
{
	margin: 0.3em;
}

/*Styling for pre elements used to hold source code. */
#template pre
{
	overflow: auto;
	background: darkslategrey;
	border: 1px outset grey;
}

/*Display code as a block-level element so that margins can be reduced .
Also set font to appropriate monospace font in green.*/
#template pre > code
{
	display: block;
	margin-left: -25%;
	font-family: "Source Code Pro", monospace;
	font-size: 1.2em;
	color: limegreen;
	
}

#template figcaption p
{
	font-weight: bold;
	font-size: 1.2em;
	margin-top: 0em;
}


#template .result
{
	font-weight: bold;
	margin: 1em 1em 1em 3em;
	text-align: center;
	font-weight: bold;
	width: 50%;
	min-width: 320px;
	-webkit-border-radius: 3px;
	border-radius: 3px;
}

#template #outcome
{
	font-weight: bold;
	font-size: 1.3em;
	margin-top: 2em;
}

/*Set margins for quiz questions */
#template .quiz-question
{
	margin: 3em;
}

/*FIrst p element is the question, so it should be bold */
#template .quiz-question p:first-of-type
{
	font-weight: bold;
}

/*Heading for each question is in small-caps */
#template .quiz-question h3
{
	font-variant: small-caps;
}

/*Incorrect result on marking gets a red border */
#template .result.incorrect
{
	border: 2px solid red;
	
}

/*Correct result on marking gets a green border */
#template .result.correct
{
	border: 2px solid green;
	
}





	

